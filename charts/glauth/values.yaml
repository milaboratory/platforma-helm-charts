# Default values for generic-application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
nameOverride: ""
fullnameOverride: ""
#
rbac:
  create: true
  annotations: {}
  extraLabels: {}
serviceAccount:
  # -- Create service account.
  create: true
  # name:
  extraLabels: {}
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  automountServiceAccountToken: true
app:
  enabled: true
  # -- Server container name
  name: glauth
  image:
    # -- Image repository
    repository: glauth/glauth-plugins
    # -- Image tag
    #tag: ""
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Override command for the container
    command: ""
    # -- Argument list for the command
    args: []
  # -- Deployment additional labels
  extraLabels: {}
  #-- Deployment annotations
  annotations: {}
  # -- Name of Priority Class
  priorityClassName: ""
  #  Use an alternate scheduler, e.g. "stork".
  #  ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""
  # -- Only Pod's additional labels
  podLabels: {}
  # -- Only Pod's annotations
  podAnnotations: {}
  # -- Pod's management policy
  podManagementPolicy: OrderedReady
  # Deployment strategy ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
    #type: Recreate
  # -- Depoyment's (continer level) security context
  securityContext: []
  #  runAsUser: 0
  #  runAsGroup: 0
  #  runAsNonRoot: false
  #  readOnlyRootFilesystem: false
  #  allowPrivilegeEscalation: false
  #  capabilities:
  #    drop: ["ALL"]
  # -- Pod's security context.
  # ref: [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: []
  #  fsGroup: 0
  # Number of old ReplicaSets to retain
  #
  replicaCount: 1
  #
  containerWorkingDir: ""
  # -- Deployment init containers
  initContainers: []
  # Inject Kubernetes services as environment variables.
  # See https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#environment-variables
  enableServiceLinks: true
  # -- Image pull secrets.
  # ref. https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # -- Node tolerations for server scheduling to nodes with taints.
  # ref: [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/)
  tolerations: []
  # -- Pod's node selector.
  # ref: [https://kubernetes.io/docs/user-guide/node-selection/](https://kubernetes.io/docs/user-guide/node-selection/)
  nodeSelector: {}
  # -- Pod affinity
  affinity: {}
  # -- Topology Spread Constraints ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []
  # -- Env variables
  # -- Additional environment variables (ex.: secret tokens, flags)
  env: {}
  envValueFrom: {}
  # -- GLAuth config
  config: |
    [backend]
      datastore = "config"
      nameformat = "cn"
      groupformat = "ou"
      baseDN = "dc=demo,dc=io"

    [behaviors]
      IgnoreCapabilities = false
      LimitFailedBinds = false

    [ldap]
      enabled = true
      listen = "0.0.0.0:3893"
    [ldaps]
      enabled = false
      listen = "0.0.0.0:3894"
      cert = "/app/config/ssl/glauth-ca-cert.pem"
      key = "/app/config/ssl/glauth-ca-key.pem"
    [api]
      enabled = false
      internals = true
      listen = "0.0.0.0:5555"

    [[groups]]
      name = "users"
      gidnumber = 5501

    [[users]]
      name = "testuser1"
      uidnumber = 5001
      primarygroup = 5501
      passsha256 = "00a082620a12245988ee6ef6d61a561c009e0bbd033b40604b96c199f28c42b6"
        [[users.capabilities]]
        action = "search"
        object = "ou=users,dc=demo,dc=io"
  # -- Persistent volume
  persistentVolume:
    # -- Create/use Persistent Volume Claim for server component. Empty dir if false
    enabled: false
    type: "pvc"
    # -- Mount path
    mountPath: "/app/data"
    # -- Array of access modes. Must match those of existing PV or dynamic provisioner.
    # ref: [http://kubernetes.io/docs/user-guide/persistent-volumes/](http://kubernetes.io/docs/user-guide/persistent-volumes/)
    accessModes:
      - ReadWriteOnce
    # -- Persistant volume annotations
    annotations: {}
    # -- Persistant volume extraLabels
    extraLabels: {}
    # -- persistentVolumeReclaimPolicy. The reclaim policy for a PersistentVolume tells the cluster what to do with the volume after it has been released of its claim.
    reclaimPolicy: ""
    # -- StorageClass to use for persistent volume. Requires server.persistentVolume.enabled: true. If defined, PVC created automatically
    storageClass: local-path
    # -- Existing Claim name. If defined, PVC must be created manually before volume will be bound
    # -- This helm chart is generic, so if the existing claim is set, the default PVC with the name release-name-generic-application won't be created.
    # -- Don't forget to add value as clameName in the volumes section
    existingClaim: ""
    # -- Bind Persistent Volume by labels. Must match all labels of targeted PV.
    matchLabels: {}
    # -- Mount path. Server data Persistent Volume mount root path.
    size: 10Gi
  # -- Resource object.
  # ref: [http://kubernetes.io/docs/user-guide/compute-resources/](http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Indicates whether the Container is ready to service requests. If the readiness probe fails, the endpoints controller removes the Pod's IP address from the endpoints of all Services that match the Pod. The default state of readiness before the initial delay is Failure. If a Container does not provide a readiness probe, the default state is Success.
  readinessProbe:
    tcpSocket:
      port: glauth
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
  # Indicates whether the Container is running. If the liveness probe fails, the kubelet kills the Container, and the Container is subjected to its restart policy. If a Container does not provide a liveness probe, the default state is Success.
  livenessProbe:
    tcpSocket:
      port: glauth
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 10
  # Indicates whether the Container is done with potentially costly initialization. If set it is executed first. If it fails Container is restarted. If it succeeds liveness and readiness probes takes over.
  startupProbe: {}
  #startupProbe:
  #  tcpSocket:
  #    port: http
  #  failureThreshold: 30
  #  periodSeconds: 15
  #  successThreshold: 1
  #  timeoutSeconds: 5
  #
  # Istio
  istio:
    enabled: false
    gateway:
      ingressGatewayName: ingressgateway-internal-nlb
      port: 3893
      portName: tcp-istio
      protocol: TCP
      extraLabels: {}
    virtualService:
      extraLabels: {}
    hosts:
      - "*"
  service:
    # -- Service annotations
    annotations: {}
    # -- Service labels
    extraLabels: {}
    # -- Service ClusterIP
    clusterIP: ""
    # -- Service External IPs. ref: [https://kubernetes.io/docs/user-guide/services/#external-ips]( https://kubernetes.io/docs/user-guide/services/#external-ips)
    externalIPs: []
    # -- Service load balacner IP
    loadBalancerIP: ""
    # -- Load balancer source range
    loadBalancerSourceRanges: []
    # -- Service port
    port: 3893
    # -- Container port name
    portName: glauth
    # -- Container port
    targetPort: 3893
    # -- Node port
    # nodePort: 30000
    # -- Service type
    type: ClusterIP
    # Ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    # externalTrafficPolicy: "local"
    # healthCheckNodePort: 0

    # Container Lifecycle Hooks. Execute a specific bash command or make an HTTP request
    lifecycleHooks: {}
    # postStart:
    #   exec:
    #     command: []
  # -- Pod's termination grace period in seconds
  terminationGracePeriodSeconds: 30
  # Overrides pod.spec.hostAliases in the generic-application deployment's pods
  hostAliases: []
  # - ip: "1.2.3.4"
  #   hostnames:
  #     - "my.host.com"

  # Enable direct access to the network interfaces of the host machine where the pod was started
  hostNetwork: false
  # dnsPolicy and dnsConfig for Deployments if you want non-default settings.
  # These will be passed directly to the PodSpec of same.
  dnsPolicy: ""
  dnsConfig: ""

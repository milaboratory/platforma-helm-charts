apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platforma.fullname" . }}
  labels:
    {{- include "platforma.labels" . | nindent 4 }}
spec:
  {{- include "platforma.validatePrimaryStorage" . | nindent 2 }}
  {{- include "platforma.validatePersistence" . | nindent 2 }}

  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "platforma.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    {{- if eq .Values.deployment.strategy.type "RollingUpdate" }}
    rollingUpdate:
      {{- toYaml .Values.deployment.strategy.rollingUpdate | nindent 6 }}
    {{- end }}
  template:
    metadata:
      labels:
        {{- include "platforma.selectorLabels" . | nindent 8 }}
        {{- with .Values.deployment.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.deployment.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "platforma.serviceAccountName" . }}
      {{- with .Values.deployment.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.deployment.command.enabled }}
          command:
            {{- toYaml .Values.deployment.command.command | nindent 12 }}
          {{- end }}
          args:
            - "run"
            # Main Options
            {{- if .Values.mainOptions.licenseFile.enabled }}
            {{- if .Values.mainOptions.licenseFile.secretRef.enabled }}
            - "--license-file=/etc/platforma/secrets/license/{{ .Values.mainOptions.licenseFile.secretRef.key }}"
            {{- else }}
            - "--license-file={{ .Values.mainOptions.licenseFile.path }}"
            {{- end }}
            {{- end }}
            # Local Storage
            {{- if .Values.persistence.mainRoot.enabled }}
            - "--main-root={{ .Values.persistence.mainRoot.mountPath }}"
            {{- else }}
            {{- if .Values.persistence.dbDir.enabled }}
            - "--db-dir={{ .Values.persistence.dbDir.mountPath }}"
            {{- end }}
            {{- if .Values.googleBatch.enabled }}
            - "--work-dir={{ .Values.googleBatch.volumes.mountPath }}/{{ .Values.googleBatch.volumes.workDirName }}"
            - "--packages-dir={{ .Values.googleBatch.volumes.mountPath }}/{{ .Values.googleBatch.volumes.packagesDirName }}"
            {{- else }}
            {{- if .Values.persistence.workDir.enabled }}
            - "--work-dir={{ .Values.persistence.workDir.mountPath }}"
            {{- end }}
            {{- if .Values.persistence.packagesDir.enabled }}
            - "--packages-dir={{ .Values.persistence.packagesDir.mountPath }}"
            {{- end }}
            {{- end }}
            {{- end }}
            # Listen Options
            - "--listen-address={{ .Values.listenOptions.ip }}"
            - "--listen-port={{ .Values.listenOptions.port }}"
            {{- if .Values.primaryStorage.fs.enabled }}
            - "--listen-http-port={{ .Values.listenOptions.httpPort }}"
            {{- end }}
            {{- if .Values.listenOptions.tls.enabled }}
            - "--listen-tls={{ .Values.listenOptions.tls.certPath }},{{ .Values.listenOptions.tls.keyPath }}"
            {{- end }}
            {{- if .Values.listenOptions.selfSignedTls }}
            - "--self-signed-tls"
            {{- if .Values.listenOptions.selfSignedTlsOrg }}
            - "--self-signed-tls-org={{ .Values.listenOptions.selfSignedTlsOrg }}"
            {{- end }}
            {{- if .Values.listenOptions.selfSignedTlsDomains }}
            {{- range .Values.listenOptions.selfSignedTlsDomains }}
            - "--self-signed-tls-domain={{ . }}"
            {{- end }}
            {{- end }}
            {{- if .Values.listenOptions.selfSignedTlsIps }}
            {{- range .Values.listenOptions.selfSignedTlsIps }}
            - "--self-signed-tls-ip={{ . }}"
            {{- end }}
            {{- end }}
            {{- end }}
            # Primary Storage Options
            {{- if .Values.primaryStorage.s3.enabled }}
            - "--primary-storage-s3={{ .Values.primaryStorage.s3.url }}"
            {{- if .Values.primaryStorage.s3.region }}
            - "--primary-storage-s3-region={{ .Values.primaryStorage.s3.region }}"
            {{- end }}
            {{- if .Values.primaryStorage.s3.secretRef.enabled }}
            - "--primary-storage-s3-key=/etc/platforma/secrets/primary-storage-s3/{{ .Values.primaryStorage.s3.secretRef.keyKey }}"
            - "--primary-storage-s3-secret=/etc/platforma/secrets/primary-storage-s3/{{ .Values.primaryStorage.s3.secretRef.secretKey }}"
            {{- else }}
            {{- if .Values.primaryStorage.s3.key }}
            - "--primary-storage-s3-key={{ .Values.primaryStorage.s3.key }}"
            {{- end }}
            {{- if .Values.primaryStorage.s3.secret }}
            - "--primary-storage-s3-secret={{ .Values.primaryStorage.s3.secret }}"
            {{- end }}
            {{- end }}
            {{- if .Values.primaryStorage.s3.externalEndpoint }}
            - "--primary-storage-s3-external-endpoint={{ .Values.primaryStorage.s3.externalEndpoint }}"
            {{- end }}
            {{- if .Values.primaryStorage.s3.noDataIntegrity }}
            - "--primary-storage-s3-no-data-integrity"
            {{- end }}
            {{- end }}
            {{- if .Values.primaryStorage.fs.enabled }}
            {{- if .Values.primaryStorage.fs.autoUrl }}
            - "--primary-storage-fs-url=https://localhost:{{ .Values.listenOptions.httpPort }}"
            {{- else if .Values.primaryStorage.fs.url }}
            - "--primary-storage-fs-url={{ .Values.primaryStorage.fs.url }}"
            {{- end }}
            {{- if .Values.primaryStorage.fs.pvc.enabled }}
            - "--primary-storage-fs={{ .Values.primaryStorage.fs.pvc.mountPath }}"
            {{- end }}
            {{- end }}
            {{- if .Values.primaryStorage.gcs.enabled }}
            - "--primary-storage-gcs={{ .Values.primaryStorage.gcs.url }}"
            {{- $gcpProject := .Values.gcp.projectId | default .Values.primaryStorage.gcs.projectId }}
            {{- if $gcpProject }}
            - "--primary-storage-gcs-project-id={{ $gcpProject }}"
            {{- end }}
            {{- $gcpSa := include "platforma.gcpServiceAccount" . }}
            {{- if $gcpSa }}
            - "--primary-storage-gcs-service-account={{ $gcpSa }}"
            {{- end }}
            {{- end }}
            # Data Library Options
            {{- if .Values.dataLibrary.noHostDataLibrary }}
            - "--no-host-data-library"
            {{- end }}
            {{- range .Values.dataLibrary.fs }}
            {{- if .pvc.enabled }}
            - "--data-library-fs={{ .id }}={{ .path }}"
            {{- end }}
            {{- end }}
            {{- range .Values.dataLibrary.s3 }}
            {{- if .enabled }}
            - "--data-library-s3={{ .id }}={{ .url }}"
            {{- if .region }}
            - "--data-library-s3-region={{ .id }}={{ .region }}"
            {{- end }}
            {{- if .secretRef.enabled }}
            - "--data-library-s3-key={{ .id }}=/etc/platforma/secrets/datalib-s3/{{ .id }}/{{ .secretRef.keyKey }}"
            - "--data-library-s3-secret={{ .id }}=/etc/platforma/secrets/datalib-s3/{{ .id }}/{{ .secretRef.secretKey }}"
            {{- else }}
            {{- if .key }}
            - "--data-library-s3-key={{ .id }}={{ .key }}"
            {{- end }}
            {{- if .secret }}
            - "--data-library-s3-secret={{ .id }}={{ .secret }}"
            {{- end }}
            {{- end }}
            {{- if .externalEndpoint }}
            - "--data-library-s3-external-endpoint={{ .id }}={{ .externalEndpoint }}"
            {{- end }}
            {{- if .noDataIntegrity }}
            - "--data-library-s3-no-data-integrity={{ .id }}=true"
            {{- end }}
            {{- end }}
            {{- end }}
            {{- range .Values.dataLibrary.gcs }}
            {{- if .enabled }}
            - "--data-library-gcs={{ .id }}={{ .url }}"
            {{- $dlProject := $.Values.gcp.projectId | default .projectId }}
            {{- if $dlProject }}
            - "--data-library-gcs-project-id={{ .id }}={{ $dlProject }}"
            {{- end }}
            {{- $dlSa := .serviceAccount | default $.Values.gcp.serviceAccount }}
            {{- if $dlSa }}
            - "--data-library-gcs-service-account={{ .id }}={{ $dlSa }}"
            {{- end }}
            {{- if .jsonKeyFilePath }}
            - "--data-library-gcs-json-key-file-path={{ .id }}={{ .jsonKeyFilePath }}"
            {{- end }}
            {{- end }}
            {{- end }}
            # Google Batch Options
            {{- if .Values.googleBatch.enabled }}
            - "--google-batch-storage={{ .Values.googleBatch.storage }}"
            {{- $gbProject := .Values.gcp.projectId | default .Values.googleBatch.project }}
            {{- if $gbProject }}
            - "--google-batch-project={{ $gbProject }}"
            {{- end }}
            {{- if .Values.googleBatch.region }}
            - "--google-batch-region={{ .Values.googleBatch.region }}"
            {{- end }}
            {{- if .Values.googleBatch.jobNamePrefix }}
            - "--google-batch-job-name-prefix={{ .Values.googleBatch.jobNamePrefix }}"
            {{- end }}
            {{- if .Values.googleBatch.jobImage }}
            - "--google-batch-job-image={{ .Values.googleBatch.jobImage }}"
            {{- end }}
            - "--google-batch-network={{ .Values.googleBatch.network }}"
            - "--google-batch-subnetwork={{ .Values.googleBatch.subnetwork }}"
            - "--google-batch-provisioning={{ .Values.googleBatch.provisioning }}"
            {{- $gbSa := .Values.googleBatch.serviceAccount | default .Values.gcp.serviceAccount }}
            {{- if $gbSa }}
            - "--google-batch-service-account={{ $gbSa }}"
            {{- end }}
            {{- end }}
            # Authentication Options
            {{- if and (not .Values.authOptions.htpasswd.enabled) (not .Values.authOptions.ldap.enabled) }}
            - "--no-auth"
            {{- else }}
            {{- if .Values.authOptions.htpasswd.enabled }}
            {{- if .Values.authOptions.htpasswd.secretRef.enabled }}
            - "--auth-htpasswd=/etc/platforma/secrets/htpasswd/{{ .Values.authOptions.htpasswd.secretRef.key }}"
            {{- else }}
            - "--auth-htpasswd={{ .Values.authOptions.htpasswd.path }}"
            {{- end }}
            {{- end }}
            {{- if .Values.authOptions.ldap.enabled }}
            - "--auth-ldap-server={{ .Values.authOptions.ldap.server }}"
            {{- if .Values.authOptions.ldap.dn }}
            - "--auth-ldap-dn={{ .Values.authOptions.ldap.dn }}"
            {{- end }}
            {{- if .Values.authOptions.ldap.startTls }}
            - "--auth-ldap-start-tls"
            {{- end }}
            {{- if .Values.authOptions.ldap.tls.enabled }}
            {{- if .Values.authOptions.ldap.tls.secretRef.enabled }}
            - "--auth-ldap-tls=/etc/platforma/secrets/ldap/{{ .Values.authOptions.ldap.tls.secretRef.certKey }},/etc/platforma/secrets/ldap/{{ .Values.authOptions.ldap.tls.secretRef.keyKey }}"
            {{- else if and .Values.authOptions.ldap.tls.certPath .Values.authOptions.ldap.tls.keyPath }}
            - "--auth-ldap-tls={{ .Values.authOptions.ldap.tls.certPath }},{{ .Values.authOptions.ldap.tls.keyPath }}"
            {{- end }}
            {{- if and .Values.authOptions.ldap.tls.secretRef.enabled .Values.authOptions.ldap.tls.secretRef.caKey }}
            - "--auth-ldap-cas=/etc/platforma/secrets/ldap/{{ .Values.authOptions.ldap.tls.secretRef.caKey }}"
            {{- else if .Values.authOptions.ldap.tls.casPath }}
            - "--auth-ldap-cas={{ .Values.authOptions.ldap.tls.casPath }}"
            {{- end }}
            {{- end }}
            {{- if .Values.authOptions.ldap.rootCas }}
            - "--auth-ldap-root-cas={{ .Values.authOptions.ldap.rootCas }}"
            {{- end }}
            {{- end }}
            {{- end }}
            # Logging Options
            - "--log-dst={{ .Values.logging.destination }}"
            # Monitoring Options
            {{- if .Values.monitoring.enabled }}
            - "--monitoring-ip={{ .Values.listenOptions.ip }}"
            - "--monitoring-port={{ .Values.monitoring.port }}"
            {{- else }}
            - "--no-monitoring"
            {{- end }}
            # Debug Options
            {{- if .Values.debug.enabled }}
            - "--debug-enabled"
            - "--debug-ip={{ .Values.listenOptions.ip }}"
            - "--debug-port={{ .Values.debug.port }}"
            {{- end }}
            # Extra Arguments
            {{- range .Values.extraArgs }}
            - {{ . | quote }}
            {{- end }}
          ports:
            - name: grpc
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            {{- if .Values.primaryStorage.fs.enabled }}
            - name: http
              containerPort: {{ .Values.listenOptions.httpPort }}
              protocol: TCP
            {{- end }}
            {{- if .Values.monitoring.enabled }}
            - name: monitoring
              containerPort: {{ .Values.monitoring.port }}
              protocol: TCP
            {{- end }}
            {{- if .Values.debug.enabled }}
            - name: debug
              containerPort: {{ .Values.debug.port }}
              protocol: TCP
            {{- end }}
          env:
            {{- range $key, $value := .Values.env.variables }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range .Values.env.secretVariables }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretKeyRef.name }}
                  key: {{ .secretKeyRef.key }}
                  {{- if hasKey .secretKeyRef "optional" }}
                  optional: {{ .secretKeyRef.optional }}
                  {{- end }}
            {{- end }}
            {{- range .Values.env.configMapVariables }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: {{ .configMapKeyRef.name }}
                  key: {{ .configMapKeyRef.key }}
                  {{- if hasKey .configMapKeyRef "optional" }}
                  optional: {{ .configMapKeyRef.optional }}
                  {{- end }}
            {{- end }}
          {{- with .Values.probes.liveness }}
          {{- if .enabled }}
          livenessProbe:
            {{- if eq .type "httpGet" }}
            httpGet:
              path: {{ .httpGet.path }}
              port: {{ .httpGet.port }}
            {{- else if eq .type "tcpSocket" }}
            tcpSocket:
              port: {{ .tcpSocket.port }}
            {{- else if eq .type "grpc" }}
            grpc:
              port: {{ .grpc.port }}
              {{- if .grpc.service }}
              service: {{ .grpc.service }}
              {{- end }}
            {{- end }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          {{- with .Values.probes.readiness }}
          {{- if .enabled }}
          readinessProbe:
            {{- if eq .type "httpGet" }}
            httpGet:
              path: {{ .httpGet.path }}
              port: {{ .httpGet.port }}
            {{- else if eq .type "tcpSocket" }}
            tcpSocket:
              port: {{ .tcpSocket.port }}
            {{- else if eq .type "grpc" }}
            grpc:
              port: {{ .grpc.port }}
              {{- if .grpc.service }}
              service: {{ .grpc.service }}
              {{- end }}
            {{- end }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # -- A list of volume mounts for the application container.
          # This is automatically populated based on your persistence settings.
          volumeMounts:
            {{- if and .Values.googleBatch.enabled .Values.googleBatch.volumes.enabled }}
            - name: {{ .Values.googleBatch.volumes.name }}
              mountPath: {{ .Values.googleBatch.volumes.mountPath }}
            {{- end }}
            {{- include "platforma.volumeMounts" . | nindent 12 }}
            {{- if .Values.mainOptions.licenseFile.secretRef.enabled }}
            - name: license-secret
              mountPath: "/etc/platforma/secrets/license"
              readOnly: true
            {{- end }}
            {{- if .Values.primaryStorage.s3.secretRef.enabled }}
            - name: primary-storage-s3-secret
              mountPath: "/etc/platforma/secrets/primary-storage-s3"
              readOnly: true
            {{- end }}
            {{- range .Values.dataLibrary.s3 }}
            {{- if .secretRef.enabled }}
            - name: datalib-s3-{{ .id }}
              mountPath: "/etc/platforma/secrets/datalib-s3/{{ .id }}"
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if .Values.authOptions.htpasswd.secretRef.enabled }}
            - name: htpasswd-secret
              mountPath: "/etc/platforma/secrets/htpasswd"
              readOnly: true
            {{- end }}
            {{- if and .Values.authOptions.ldap.enabled .Values.authOptions.ldap.tls.enabled .Values.authOptions.ldap.tls.secretRef.enabled }}
            - name: ldap-secret
              mountPath: "/etc/platforma/secrets/ldap"
              readOnly: true
            {{- end }}
      # -- Volumes for the pod.
      # This is automatically populated based on your persistence settings.
      volumes:
        {{- if and .Values.googleBatch.enabled .Values.googleBatch.volumes.enabled }}
        - name: {{ .Values.googleBatch.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.googleBatch.volumes.existingClaim | default (printf "%s-google-batch" (include "platforma.fullname" .)) }}
        {{- end }}
        {{- include "platforma.volumes" . | nindent 8 }}
        {{- if .Values.mainOptions.licenseFile.secretRef.enabled }}
        - name: license-secret
          secret:
            secretName: {{ .Values.mainOptions.licenseFile.secretRef.name }}
        {{- end }}
        {{- if .Values.primaryStorage.s3.secretRef.enabled }}
        - name: primary-storage-s3-secret
          secret:
            secretName: {{ .Values.primaryStorage.s3.secretRef.name }}
        {{- end }}
        {{- range .Values.dataLibrary.s3 }}
        {{- if .secretRef.enabled }}
        - name: datalib-s3-{{ .id }}
          secret:
            secretName: {{ .secretRef.name }}
        {{- end }}
        {{- end }}
        {{- if .Values.authOptions.htpasswd.secretRef.enabled }}
        - name: htpasswd-secret
          secret:
            secretName: {{ .Values.authOptions.htpasswd.secretRef.name }}
        {{- end }}
        {{- if and .Values.authOptions.ldap.enabled .Values.authOptions.ldap.tls.enabled .Values.authOptions.ldap.tls.secretRef.enabled }}
        - name: ldap-secret
          secret:
            secretName: {{ .Values.authOptions.ldap.tls.secretRef.name }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 